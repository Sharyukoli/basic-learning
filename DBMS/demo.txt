-- eCommerce  Solution
-- orders :  details about customer orders
-- inventory : information about product stock
-- Order processing System
 
-- When an order is placed, the inventory is automatically  updated to
-- reflect  new updated stock
create database sample_ecommerce;
use sample_ecommerce;
 
CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    quantity INT,
    order_date DATETIME,
    status ENUM('pending', 'completed', 'canceled')
);
 
CREATE TABLE inventory (
    product_id INT PRIMARY KEY,
    stock_quantity INT
);
 
-- user story:
-- When an order is placed, the inventory is automatically  updated to
-- reflect  new updated stock
 
DELIMITER $$
CREATE TRIGGER after_order_insert
AFTER  INSERT ON  orders
FOR EACH ROW
BEGIN
	DECLARE available_stock INT;
    SELECT stock_quantity INTO available_stock
    FROM inventory
    WHERE product_id = NEW.product_id;
     IF available_stock IS NOT NULL AND available_stock >= NEW.quantity THEN
		UPDATE  inventory
		SET  stock_quantity=stock_quantity-NEW.quantity
		WHERE  product_id=NEW.product_id;
     ELSE
		SIGNAL SQLSTATE '45000' 
        SET MESSAGE_TEXT= 'Insufficient stock for the product';
     END IF;
END $$
DELIMITER ;
 
 
-- Test trigger execution:
 
-- pre-requisite
INSERT INTO inventory (product_id,stock_quantity)
values(	(1,56),
		(2,78),
		(5,00));
-- Insert a new order
INSERT INTO orders (product_id, quantity, order_date, status)
Values (1, 3, NOW(), 'pending');
 
 
 
 
 
 
 
 
 